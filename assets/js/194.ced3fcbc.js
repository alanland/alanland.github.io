(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{903:function(s,t,a){"use strict";a.r(t);var r=a(6),n=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[s._v("#")]),s._v(" Install")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" supervisor\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#config"}},[s._v("#")]),s._v(" Config")]),s._v(" "),a("p",[s._v("将每个进程的配置文件单独拆分,放在"),a("code",[s._v("/etc/supervisor/conf.d/")]),s._v("目录下,\n以"),a("code",[s._v(".conf")]),s._v("作为扩展名,例如 "),a("code",[s._v("itms.conf")]),s._v(" 定义的一个简单的HTTP服务器:")]),s._v(" "),a("div",{staticClass:"language-ini line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("[program:itms]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("command")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("python -m SimpleHTTPServer")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start"}},[s._v("#")]),s._v(" Start")]),s._v(" "),a("p",[s._v("重启supervisor,让配置文件生效,然后启动itms进程:")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("supervisorctl reload\nsupervisorctl start "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"supervisor-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#supervisor-config"}},[s._v("#")]),s._v(" Supervisor Config")]),s._v(" "),a("div",{staticClass:"language-ini line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("[program:meta.txn.recover.on.error]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("command")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("/cas/bin/meta.txn.recover.on.error ; 被监控的进程路径")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("numprocs")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("1                    ; 启动几个进程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("directory")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("/cas/bin                ; 执行前要不要先cd到目录去，一般不用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("autostart")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("true                ; 随着supervisord的启动而启动")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("autorestart")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("true              ; 自动重启。。当然要选上了")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("startretries")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("10               ; 启动失败时的最多重试次数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("exitcodes")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("0                 ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("stopsignal")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("KILL               ; 用来杀死进程的信号")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("stopwaitsecs")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("10               ; 发送SIGKILL前的等待时间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("redirect_stderr")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("true          ; 重定向stderr到stdout")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("stdout_logfile")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("logfile        ; 指定日志文件")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h2",{attrs:{id:"supervisor-command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#supervisor-command"}},[s._v("#")]),s._v(" Supervisor command")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("supervisorctl start programxxx")]),s._v(" 启动某个进程")]),s._v(" "),a("li",[a("code",[s._v("supervisorctl restart programxxx")]),s._v(" 重启某个进程")]),s._v(" "),a("li",[a("code",[s._v("supervisorctl stop groupworker")]),s._v(" 重启所有属于名为groupworker这个分组的进程(start,restart同理)")]),s._v(" "),a("li",[a("code",[s._v("supervisorctl stop all")]),s._v(" 停止全部进程，注：start、restart、stop都不会载入最新的配置文件。")]),s._v(" "),a("li",[a("code",[s._v("supervisorctl reload")]),s._v(" 载入最新的配置文件，停止原有进程并按新的配置启动、管理所有进程。")]),s._v(" "),a("li",[a("code",[s._v("supervisorctl update")]),s._v(" 根据最新的配置文件，启动新配置或有改动的进程，配置没有改动的进程不会受影响而重启。")]),s._v(" "),a("li",[a("code",[s._v("supervisor")]),s._v(" 启动和停止的日志文件存放在/var/log/supervisor/supervisord.log")])]),s._v(" "),a("p",[s._v("注意：显式用stop停止掉的进程，用reload或者update都不会自动重启")]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("END")])])}),[],!1,null,null,null);t.default=n.exports}}]);